import productsMock from '@/mock/products.json'
import type { ProductsPageData } from '@/types/product'

const API_URL = process.env.NEXT_PUBLIC_API_URL || ''

export async function fetchProducts(): Promise<ProductsPageData> {
	try {
		if (!API_URL) {
			return productsMock as ProductsPageData
		}

		const res = await fetch(`${API_URL}/shop/products/`, { cache: 'no-store' })
		if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö')

		const products = await res.json()

		// üîÑ –ü—Ä–∏–≤–æ–¥–∏–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫ —Ç–≤–æ–µ–π —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
		const normalized = {
			hero: {
				leftImage: '/mock/products/products-hero-girl.png',
				rightImage: '/mock/products/products-hero-packet.png',
				title: 'Crafted with Spice Shared with Joy',
			},
			products,
			productsDetailed: products, // –º–æ–∂–µ—à—å –ø–æ—Ç–æ–º —Ä–∞–∑–¥–µ–ª–∏—Ç—å
		}

		return normalized as ProductsPageData
	} catch (err) {
		console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –º–æ–∫–∏ (—Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω):', err)
		return productsMock as ProductsPageData
	}
}
